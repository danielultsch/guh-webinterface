/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
 *                                                                                     *
 * Copyright (C) 2015 Lukas Mayerhofer <lukas.mayerhofer@guh.guru>                     *
 *                                                                                     *
 * Permission is hereby granted, free of charge, to any person obtaining a copy        *
 * of this software and associated documentation files (the "Software"), to deal       *
 * in the Software without restriction, including without limitation the rights        *
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell           *
 * copies of the Software, and to permit persons to whom the Software is               *
 * furnished to do so, subject to the following conditions:                            *
 *                                                                                     *
 * The above copyright notice and this permission notice shall be included in all      *
 * copies or substantial portions of the Software.                                     *
 *                                                                                     *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR          *
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,            *
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE         *
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER              *
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,       *
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE       *
 * SOFTWARE.                                                                           *
 *                                                                                     *
 * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */


$black: #000;
$grey: #676767;
$white: #fff;


$background-overlay: $white;
$background-content: transparent;
$color: $grey;


@include keyframes(flyin) {
  from { 
    filter: blur(6px);
    @include transform(scale(1.1));
    opacity: 0;
  }

  to { 
    filter: blur(0);
    @include transform(scale(1));
    opacity: 1;
  }
}

@include keyframes(flyout) {
  from { 
    filter: blur(0);
    @include transform(scale(1));
    opacity: 1;
  }

  to { 
    filter: blur(6px);
    @include transform(scale(1.1));
    opacity: 0;
  }
}


.modal {
  @include animation(flyin 0.4s);
  @include transition(all 0.4s);

  &.ngdialog-closing {
    @include animation(flyout 0.4s);
  }

  .ngdialog-overlay {
    @include linear-gradient(30deg, rgba($background-overlay, 0.8) 0%, rgba($background-overlay, 0.9) 30%, rgba($background-overlay, 0.8) 70%, rgba($background-overlay, 0.8) 100%);
    z-index: 8888;
  }

  .ngdialog-content {
    background: $background-content;
    color: $color;
    height: 100%;
    overflow-y: scroll;
    -webkit-overflow-scrolling: touch;
    // @include rem(padding, 7.5, 0, 0);
    position: relative;
    z-index: 9997;
    width: 100%;

    // @include media($min-width-s) {
    //   left: 50%;
    //   @include rem(margin-left, -10);
    //   @include rem(width, 27);
    // }

    .inner-content {
      @include rem(padding, 7.5, 6, 6);

      h3 {
        @include linear-gradient(to bottom, rgba($background-overlay, 0.8), rgba($background-overlay, 0.4));
        @include rem(font-size, 1.5);
        @include rem(height, 7.5);
        @include rem(padding, 3, 6, 3);
        position: fixed;
          left: 0;
          right: 0;
          top: 0;
        text-align: center;
        width: 100%;
        z-index: 9998;
      }
    }
  }

  .close {
    z-index: 9999;
  }
}

.modal_error {
  .ngdialog-content {
    position: relative;

    &> div {
      @include rem(font-size, 1.5);
      @include rem(line-height, 3);
      @include rem(padding, 1.5);
      position: absolute;
        left: 50%;
        top: 50%;
      text-align: center;
      @include transform(translateX(-50%) translateY(-50%));
      width: 100%;

      p {
        @include rem(margin-bottom, 1.5);
      }
    }
  }
}


// .modal {
//   position: fixed;
//     bottom: 0;
//     left: 0;
//     right: 0;
//     top: 0;
//   z-index: 9997;

//   align-items: center;
//   display: flex;
//   justify-content: center;

//   &.ngdialog-closing {
//     display: none;
//     .ngdialog-overlay,
//     .ngdialog-content {
      
//     }
//   }

//   .ngdialog-overlay {
//     @include background(linear-gradient(rgba($c-white, 0.2),  rgba($c-white, 0.4)));
//     position: fixed;
//       bottom: 0;
//       left: 0;
//       right: 0;
//       top: 0;
//     z-index: 9998;
//   }

//   .ngdialog-content {
//     background-color: $c-white;
//     box-shadow: 0px 4px 16px 0px rgba(0, 0, 0, 0.4);
//     color: $c-grey;
//     // overflow-y: scroll;
//     position: relative;
//     z-index: 9999;

//     .inner-content {
//       @include rem(padding, 7.5, 1.5, 1.5);
//       position: relative;

//       h3 {
//         @include background(linear-gradient($c-white, rgba($c-white, 0.9)));
//         @include rem(font-size, 1);
//         @include rem(height, 7.5);
//         @include rem(letter-spacing, 0.1);
//         @include rem(line-height, 1.5);
//         @include rem(padding, 3, 6);
//         position: absolute;
//           left: 0;
//           top: 0;
//         text-align: center;
//         text-transform: uppercase;
//         width: 100%;
//         z-index: 1;
//       }
//     }

//     button,
//     .button {
//       background-color: rgba($c-grey, 0.2);
//       border: none;
//       @include rem(letter-spacing, 0.1);
//       @include rem(height, 4.5);
//       @include rem(margin, 3, 0, 0);
//       @include rem(padding, 1.5);
//       text-transform: uppercase;
//       width: 100%;

//       &:hover {
//         background-color: rgba($c-grey, 0.2);
//       }

//       &.close {
//         background-color: $c-white;
//         margin: 0;
//         position: absolute;
//           @include rem(right, 1.5);
//           @include rem(top, 1.5);
//         @include rem(width, 4.5);
//         z-index: 10000;

//         .icon {
//           fill: rgba($c-grey, 0.2);
//         }

//         &:hover .icon {
//           fill: $c-grey;
//         }
//       }
//     }

//     p.infoÂ {
//       @include rem(margin, 0, 0, 1.5);
//       @include rem(padding, 0, 1.5);
//     }

//     // h3 {
//     //   @include rem(font-size, 1);
//     //   @include rem(letter-spacing, 0.1);
//     //   @include rem(line-height, 1.5);
//     //   @include rem(padding, 1.5, 1.5, 1.5, 1.6);
//     //   text-transform: uppercase;
//     // }
//   }

//   &.small .ngdialog-content {
//     @include rem(height, 30);

//     @include media($breakpoint-xs) {
//       height: 100%;
//       position: fixed;
//         bottom: 0;
//         left: 0;
//         right: 0;
//         top: 0;
//       width: 100%;
//     }

//     @include media($breakpoint-s) {
//       @include span-columns(4);
//     }

//     @include media($breakpoint-m) {
//       @include span-columns(5);
//     }

//     @include media($breakpoint-l) {
//       @include span-columns(6);
//     }

//     @include media($breakpoint-xl) {
//       @include span-columns(6);
//     }

//     @include media($breakpoint-xxl) {
//       @include span-columns(6);
//     }
//   }

//   &.error .ngdialog-content {
//     background-color: #ff5d46;
//     color: $c-white;
//     @include rem(padding, 1.5, 6, 1.5, 1.5);
//     position: fixed;
//       left: 0;
//       right: 0;
//       bottom: 0;

//     button {
//       background-color: transparent;
//       @include rem(width, 4.5);
//       margin: 0;
//       position: fixed;
//         bottom: 0;
//         right: 0;

//       .icon {
//         fill: $c-white;
//       }
//     }
//   }

//   &.full .ngdialog-content {
//     background-color: transparent;
//     position: fixed;
//       @include rem(bottom, 1.5);
//       @include rem(left, 1.5);
//       @include rem(right, 1.5);
//       @include rem(top, 1.5);
//   }

//   &.full.error .ngdialog-content {
//     background-color: $c-white;
//     position: fixed;
//       bottom: 0;
//       left: 0;
//       right: 0;
//       top: 0;

//     p {
//       @include rem(font-size, 1.5);
//       @include rem(line-height, 2.25);
//       position: fixed;
//         left: 50%;
//         top: 50%;
//       @include transform(translateX(-50%) translateY(-50%));
//       text-align: center;
//     }
//   }

//   .ngdialog-close {

//   }
// }
